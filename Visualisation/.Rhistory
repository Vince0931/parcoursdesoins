iconWidth = 40, iconHeight = 60,
iconAnchorX = 22, iconAnchorY = 22
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=UNVicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par défaut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
m <- makemap()
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 0, iconAnchorY = 0
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par défaut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
m
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles()
?addProviderTiles
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("Hydda.Full")
m
?addPolygons
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1) %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="yellow") %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap.France")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap.France10000")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.Toner")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Thunderforest.Transport")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenMapSurfer.Roads")
m
?addPolygons
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.Toner")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.TonerLite")
m
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="cyan") %>%
addProviderTiles("Stamen.TonerLite")
m
?addProviderTiles
providerTileOptions
providerTileOptions()
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
m
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par défaut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="red")
table_pmsi
makemap()
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
m
table_pmsi$Npercent
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(100*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
m
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=10, color="red")
poids
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=table_pmsi$N, color="red")
m
table_pmsi$N
makemap()
m
m <- makemap()
m
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
m
rm(list=ls())
library(rgdal)
library(maptools)
EPSG <- make_EPSG()
bool <- EPSG$code == 2154 & !is.na(EPSG$code)
RGF93 <- EPSG$prj4[bool]
RGF93prj4 <- CRS(RGF93)
load("../CouchesPMSI/codesgeo2014/couchegeoPMSI2014.rdata")
dep33 <- subset (couchegeoPMSI2014, substr(couchegeoPMSI2014$codgeo,1,2) == 33)
plot(dep33)
centroides <- rgeos::gCentroid(dep33,byid = T)
points(centroides,col="red",pch=19)
load("../FINESS/locEtab.rdata")
locEtab$X <- as.numeric(as.character(locEtab$X))
locEtab$Y <- as.numeric(as.character(locEtab$Y))
coordinates(locEtab) <- ~ X + Y
proj4string(locEtab) <- RGF93prj4
locEtab33 <- subset (locEtab, substr(locEtab$INSEE_COM,1,2) == 33)
locEtab33CH <- subset (locEtab33, categetab == "355")
unv <- read.table("../FINESS/UNV/ars_metropole_unv_t.csv",sep=",",header=T,
fileEncoding = "ISO-8859-1")
bool <- unv$finess_site %in% locEtab$nofinesset
sum(bool) ## 3 unités UNV ne figurent pas dans locEtab !
bool <- locEtab33$nofinesset %in% unv$finess_site
sum(bool)
locEtab33UNV <- subset (locEtab33, bool)
class(locEtab33UNV)
points(locEtab33UNV,col="blue",pch=18)
locEtab33SSR <- subset (locEtab33, categetab == 109)
points(locEtab33SSR,col="green",pch=20)
x0 <- 371348.5
y0 <- 6401264
x1 <- 412463.6
y1 <- 6455044
fleche <- arrows(x0, y0,x1,y1,length=0.1)
points(locEtab33CH,col="blue",pch=18)
bool <- (couchegeoPMSI2014$libgeo == "ARES")
any(bool)
x0 <- couchegeoPMSI2014$x[bool]
y0 <- couchegeoPMSI2014$y[bool]
x1 <- 371348.5
y1 <- 6401264
arrows(x0, y0,x1,y1,length=0.1,lwd = 2)
locEtab33CH[1,]
x2 <- 417571.1
y2 <- 6418302
save(list = c("dep33","centroides","locEtab33SSR","locEtab33UNV",
"x0","y0","x1","y1","x2","y2"),file="../Rapport/R/parcours.rdata")
rm(list=ls())
library(maptools)
library(rgdal)
library(leaflet)
EPSG <- make_EPSG()
bool <- grepl("Lambert",EPSG$note,ignore.case = T)
EPSG_lambert <- subset (EPSG, bool)
RGF93 <- EPSG_lambert$prj4[EPSG_lambert$code==2154 & !is.na(EPSG_lambert$code)]
RGF93prj4 <- CRS(RGF93)
load("../CouchesPMSI/codesgeo2014/couchegeoPMSI2014.rdata")
load("../Rapport/R/parcours.rdata")
dep33 <- subset (couchegeoPMSI2014, substr(couchegeoPMSI2014$codgeo,1,2) == 33)
dep33 <- spTransform(dep33, CRS("+init=epsg:4326"))
locEtab33SSR <- spTransform(locEtab33SSR, CRS("+init=epsg:4326"))
locEtab33UNV <- spTransform(locEtab33UNV, CRS("+init=epsg:4326"))
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 0, iconAnchorY = 0
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
codegeo_liste <- vector("list", length = nrow(dep33@data))
names(codegeo_liste) <- dep33$codgeo
i <- 1
id_proche <- rep(0, length(centroides)) ## 0 par défaut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(100*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
m
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=table_pmsi$N, color="red")
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
codegeo_liste <- mapply(c, codegeo_liste, distance_i, SIMPLIFY=FALSE)
}
codegeo_distance <- lapply(codegeo_liste, function(x){
1-round(x/sum(x),2)
})
codegeo_sim <- lapply(codegeo_distance, function(x){
## n = nombre de parcours
# size = 1 seul établissement choisi
# prob = plus haut
y <- rmultinom(1000, size = 1, prob = x)
return(rowSums(y))
})
finess_etab <- unique(as.character(locEtab33UNV$nofinesset))
codegeo_sim2 <- lapply(codegeo_sim, function(x,finess_etab){
data.frame(N = x, nofinesset = finess_etab)
},finess_etab=finess_etab)
codes <- vector(names(codegeo_sim), length = length(codegeo_sim))
codegeo_sim3 <- mapply(cbind, codegeo_sim2, "codgeo"=names(codegeo_sim), SIMPLIFY=F)
simulation_parcours <- do.call("rbind", codegeo_sim3)
View(simulation_parcours)
colnames(simulation_parcours)
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides, codgeo=dep33$codgeo)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
View(table_pmsi)
rm(list=ls())
library(maptools)
library(rgdal)
library(leaflet)
EPSG <- make_EPSG()
bool <- grepl("Lambert",EPSG$note,ignore.case = T)
EPSG_lambert <- subset (EPSG, bool)
RGF93 <- EPSG_lambert$prj4[EPSG_lambert$code==2154 & !is.na(EPSG_lambert$code)]
RGF93prj4 <- CRS(RGF93)
load("../CouchesPMSI/codesgeo2014/couchegeoPMSI2014.rdata")
load("../Rapport/R/parcours.rdata")
dep33 <- subset (couchegeoPMSI2014, substr(couchegeoPMSI2014$codgeo,1,2) == 33)
dep33 <- spTransform(dep33, CRS("+init=epsg:4326"))
locEtab33SSR <- spTransform(locEtab33SSR, CRS("+init=epsg:4326"))
locEtab33UNV <- spTransform(locEtab33UNV, CRS("+init=epsg:4326"))
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 0, iconAnchorY = 0
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
codegeo_liste <- vector("list", length = nrow(dep33@data))
names(codegeo_liste) <- dep33$codgeo
id_proche <- rep(0, length(centroides)) ## 0 par défaut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(100*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
m
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=table_pmsi$N, color="red")
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides, codgeo=dep33$codgeo)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
i <- 1
