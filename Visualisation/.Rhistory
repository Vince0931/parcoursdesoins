latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = 1,opacity = 0.5,layerId=i)
}
m
for (i in 1:nrow(table_pmsi)){
opacite <- table_pmsi$Npercent[i]
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = 1,opacity = 1,layerId=i)
}
m
for (i in 1:nrow(table_pmsi)){
opacite <- table_pmsi$Npercent[i]
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = 100,opacity = 1,layerId=i)
}
m
m <- makemap()
for (i in 1:nrow(table_pmsi)){
opacite <- table_pmsi$Npercent[i]
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = 0.1,opacity = 1,layerId=i)
}
m
opacite
100*table_pmsi$Npercent[i]
floor(100*table_pmsi$Npercent[i])
ceiling(100*table_pmsi$Npercent[i])
ceiling(10*table_pmsi$Npercent[i])
m <- makemap()
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
m
points(centroides,col="green",pch=19)
m
points(centroides,col="green",pch=19)
?addPolylines
centroides[,1
]
centroides
addCircles(m, lng = coordinates(centroides[,1]),lat = coordinates(centroides[,1]), radius=10)
addCircles(m, lng = coordinates(centroides[,1]),lat = coordinates(centroides[,2]), radius=10)
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10)
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
?addPolylines
m
?addMarkers
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon="UNV.png")
return(m)
}
makemap()
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon="UNV.png")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon="./UNV.png")
UNVicon <- makeIcon(
iconUrl = "UNV.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
?makeIcon
UNVicon <- makeIcon(
iconUrl = "UNV.png",
iconWidth = 38, iconHeight = 38,
iconAnchorX = 22, iconAnchorY = 37
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV2.png",
iconWidth = 38, iconHeight = 38,
iconAnchorX = 22, iconAnchorY = 37
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV2.png",
iconWidth = 40, iconHeight = 38,
iconAnchorX = 22, iconAnchorY = 37
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 38,
iconAnchorX = 22, iconAnchorY = 37
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 23, iconHeight = 38,
iconAnchorX = 22, iconAnchorY = 37
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 23, iconHeight = 94,
iconAnchorX = 22, iconAnchorY = 94
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 60,
iconAnchorX = 22, iconAnchorY = 22
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs)) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 60,
iconAnchorX = 22, iconAnchorY = 22
)
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=UNVicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par dÃ©faut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
m <- makemap()
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
UNVicon <- makeIcon(
iconUrl = "UNV3.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 0, iconAnchorY = 0
)
SSRicon <- makeIcon(
iconUrl = "SSR.png",
iconWidth = 40, iconHeight = 70,
iconAnchorX = 22, iconAnchorY = 22
)
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("CartoDB.Positron")
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par dÃ©faut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "green",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
m
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles()
?addProviderTiles
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5) %>%
addProviderTiles("Hydda.Full")
m
?addPolygons
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1) %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="yellow") %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Hydda.Full")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap.France")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap.France10000")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenStreetMap")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.Toner")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Thunderforest.Transport")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("OpenMapSurfer.Roads")
m
?addPolygons
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.Toner")
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="blue") %>%
addProviderTiles("Stamen.TonerLite")
m
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="cyan") %>%
addProviderTiles("Stamen.TonerLite")
m
?addProviderTiles
providerTileOptions
providerTileOptions()
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
m
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
m
centroides <- rgeos::gCentroid(dep33,byid = T)
id_proche <- rep(0, length(centroides)) ## 0 par dÃ©faut
min_distance <- rep(1000000, length(centroides)) ## 1 000 km
i <- 1
for (i in 1:nrow(locEtab33UNV)){
distance_i <-  geosphere::distCosine(centroides,locEtab33UNV[i,])
bool <- min_distance - distance_i > 0 ## plus proche que min_distance ?
id_proche[bool] <- as.character(locEtab33UNV[i,]$nofinesset)
min_distance[bool] <-  distance_i[bool]
}
table_pmsi <- data.frame(nofinesset = id_proche, codegeo = centroides)
set.seed(67)
table_pmsi$N <- round(runif(nrow(table_pmsi), 1,100),0)
table_pmsi <- merge (table_pmsi, locEtab33UNV, by="nofinesset")
table_pmsi$Npercent <- table_pmsi$N / sum(table_pmsi$N)
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(10*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="green")
addCircles(m, lng = coordinates(centroides)[,1],lat = coordinates(centroides)[,2], radius=10, color="red")
table_pmsi
makemap()
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
m
table_pmsi$Npercent
for (i in 1:nrow(table_pmsi)){
poids <- ceiling(100*table_pmsi$Npercent[i])
longitudes <- c(table_pmsi$codegeo.x[i],table_pmsi$X[i])
latitudes <-  c(table_pmsi$codegeo.y[i],table_pmsi$Y[i])
m <- addPolylines(m, lng=longitudes, lat=latitudes,color = "blue",
popup = "test",weight = poids,opacity = 1,layerId=i)
}
m
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=10, color="red")
poids
addCircles(m, lng = table_pmsi$codegeo.x,lat = table_pmsi$codegeo.y, radius=table_pmsi$N, color="red")
m
table_pmsi$N
makemap()
m
m <- makemap()
m
makemap <-  function(){
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
## tester : Hydda.Full => affiche les principales villes
# OpenStreeMap : forets ...
# geoloc SSR
m <- addMarkers(m, lng=coordinates(locEtab33SSR)[,1],
lat=coordinates(locEtab33SSR)[,2],
popup=as.character(locEtab33SSR$rs),icon=SSRicon) %>%
# geoloc UNV
addMarkers(m, lng=coordinates(locEtab33UNV)[,1],
lat=coordinates(locEtab33UNV)[,2],
popup=as.character(locEtab33UNV$rs), icon=UNVicon)
return(m)
}
m <- makemap()
m
m <- leaflet(dep33) %>%
addPolygons(popup=as.character(dep33$libgeo), stroke=T,opacity=0.5,weight=1,color="grey") %>%
addProviderTiles("Stamen.TonerLite")
m
